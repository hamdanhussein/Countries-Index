{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/Country-Index/src/Map.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport mapdata from './featues.json';\nimport { GeoContext } from './Context';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const {\n    activeGeo,\n    handleClickMap\n  } = useContext(GeoContext);\n  const activeStyle = {\n    default: {\n      outline: 'none'\n    },\n    hover: {\n      outline: 'none'\n    },\n    pressed: {\n      outline: 'none'\n    }\n  };\n  const defaultStyle = {\n    default: {\n      outline: 'none'\n    },\n    hover: {\n      outline: 'none',\n      fill: '#22c55e'\n    },\n    pressed: {\n      outline: 'none'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full xl:w-[60%] \",\n      children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n        height: 550,\n        width: 800,\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: mapdata,\n          children: ({\n            geographies\n          }) => geographies.map(geo => {\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              fill: activeGeo.toLowerCase() === geo.id.toLowerCase() ? '#15803d' : '#86efac',\n              geography: geo,\n              style: activeGeo === geo.id.toLowerCase() ? activeStyle : defaultStyle,\n              tabIndex: \"-1\",\n              onClick: () => handleClickMap(geo)\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Map, \"HyY/flASBA5pBgwEMdIy81GJezQ=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useContext","ComposableMap","Geographies","Geography","mapdata","GeoContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","_s","activeGeo","handleClickMap","activeStyle","default","outline","hover","pressed","defaultStyle","fill","children","className","height","width","geography","geographies","map","geo","toLowerCase","id","style","tabIndex","onClick","rsmKey","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/owner/Desktop/Country-Index/src/Map.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport mapdata from './featues.json';\nimport { GeoContext } from './Context';\n\nexport default function Map() {\n  const { activeGeo, handleClickMap } = useContext(GeoContext);\n\n  const activeStyle = {\n    default: { outline: 'none' },\n    hover: { outline: 'none' },\n    pressed: { outline: 'none' }\n  };\n  const defaultStyle = {\n    default: { outline: 'none' },\n    hover: { outline: 'none', fill: '#22c55e' },\n    pressed: { outline: 'none' }\n  };\n\n  return (\n    <>\n      <div className=\"w-full xl:w-[60%] \">\n        <ComposableMap height={550} width={800}>\n          <Geographies geography={mapdata}>\n            {({ geographies }) =>\n              geographies.map((geo) => {\n                return (\n                  <Geography\n                    fill={\n                      activeGeo.toLowerCase() === geo.id.toLowerCase() ? '#15803d' : '#86efac'\n                    }\n                    geography={geo}\n                    key={geo.rsmKey}\n                    style={activeGeo === geo.id.toLowerCase() ? activeStyle : defaultStyle}\n                    tabIndex=\"-1\"\n                    onClick={() => handleClickMap(geo)}\n                  />\n                );\n              })\n            }\n          </Geographies>\n        </ComposableMap>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,aAAa,EAAEC,WAAW,EAAEC,SAAS,QAAQ,mBAAmB;AACzE,OAAOC,OAAO,MAAM,gBAAgB;AACpC,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC,SAAS;IAAEC;EAAe,CAAC,GAAGb,UAAU,CAACK,UAAU,CAAC;EAE5D,MAAMS,WAAW,GAAG;IAClBC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC;IAC5BC,KAAK,EAAE;MAAED,OAAO,EAAE;IAAO,CAAC;IAC1BE,OAAO,EAAE;MAAEF,OAAO,EAAE;IAAO;EAC7B,CAAC;EACD,MAAMG,YAAY,GAAG;IACnBJ,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC;IAC5BC,KAAK,EAAE;MAAED,OAAO,EAAE,MAAM;MAAEI,IAAI,EAAE;IAAU,CAAC;IAC3CF,OAAO,EAAE;MAAEF,OAAO,EAAE;IAAO;EAC7B,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAKe,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eACjCd,OAAA,CAACN,aAAa;QAACsB,MAAM,EAAE,GAAI;QAACC,KAAK,EAAE,GAAI;QAAAH,QAAA,eACrCd,OAAA,CAACL,WAAW;UAACuB,SAAS,EAAErB,OAAQ;UAAAiB,QAAA,EAC7BA,CAAC;YAAEK;UAAY,CAAC,KACfA,WAAW,CAACC,GAAG,CAAEC,GAAG,IAAK;YACvB,oBACErB,OAAA,CAACJ,SAAS;cACRiB,IAAI,EACFR,SAAS,CAACiB,WAAW,CAAC,CAAC,KAAKD,GAAG,CAACE,EAAE,CAACD,WAAW,CAAC,CAAC,GAAG,SAAS,GAAG,SAChE;cACDJ,SAAS,EAAEG,GAAI;cAEfG,KAAK,EAAEnB,SAAS,KAAKgB,GAAG,CAACE,EAAE,CAACD,WAAW,CAAC,CAAC,GAAGf,WAAW,GAAGK,YAAa;cACvEa,QAAQ,EAAC,IAAI;cACbC,OAAO,EAAEA,CAAA,KAAMpB,cAAc,CAACe,GAAG;YAAE,GAH9BA,GAAG,CAACM,MAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIhB,CAAC;UAEN,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC,gBACN,CAAC;AAEP;AAAC3B,EAAA,CAxCuBD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}